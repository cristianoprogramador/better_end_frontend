{
  "home": {
    "welcome": "Bem-vindo ao Better-end",
    "compare": "Compare o desempenho dos bancos de dados SQL e NoSQL através de várias operações.",
    "betterend": "Better-end é uma ferramenta projetada para ajudar os desenvolvedores a entender as diferenças de desempenho entre bancos de dados SQL e NoSQL. Testando várias operações como inserção de dados, recuperação, atualização e exclusão, você pode ver em primeira mão como cada tipo de banco de dados se comporta em diferentes cenários.",
    "data_insertion": "Inserção de Dados (POST)",
    "data_insertion_description": "Teste a rapidez com que os dados podem ser inseridos nos bancos de dados SQL e NoSQL.",
    "data_retrieval": "Recuperação de Dados (GET)",
    "data_retrieval_description": "Compare a velocidade de recuperação de dados com consultas complexas.",
    "data_update": "Atualização de Dados (UPDATE)",
    "data_update_description": "Veja como os dados podem ser atualizados de forma eficiente em ambos os tipos de banco de dados.",
    "data_deletion": "Exclusão de Dados (DELETE)",
    "data_deletion_description": "Entenda o desempenho das operações de exclusão de dados.",
    "frontend_code": "Código Frontend",
    "frontend_code_description": "Acesse o repositório de código do frontend no GitHub.",
    "backend_code": "Código Backend",
    "backend_code_description": "Acesse o repositório de código do backend no GitHub."
  },
  "post": {
    "performance": "Comparação de Desempenho: SQL vs NoSQL",
    "download_file": "Baixar o Arquivo",
    "download_description": "(Clique aqui para baixar e ver o conteúdo)",
    "loading": "Carregando...",
    "click_to_load": "Clique para Carregar",
    "sql": "SQL",
    "nosql": "NoSQL",
    "postgresql": "(PostgreSQL)",
    "mongodb": "(MongoDB)",
    "average_speed_description": "Acima mostraremos a velocidade média para o backend obter o arquivo e registrar nas tabelas apropriadas.",
    "backend_functions_description": "Abaixo você poderá entender as funções realizadas no backend, o arquivo em questão possui 11.952 linhas e 21 colunas, apenas 1.612KB de tamanho, e você pode testar todo o processo baixando o código do backend e testando por conta própria.",
    "results_note": "(você pode obter resultados diferentes dependendo da sua máquina)"
  },
  "get": {
    "performance": "Comparação de Desempenho: SQL vs NoSQL",
    "download_file": "Baixar o Arquivo",
    "download_description": "(Clique aqui para baixar o arquivo JSON com o resultado)",
    "loading": "Carregando...",
    "click_to_filter": "Clique para Filtrar",
    "sql": "SQL",
    "nosql": "NoSQL",
    "postgresql": "(PostgreSQL)",
    "mongodb": "(MongoDB)",
    "query_description": "A consulta recupera pedidos que incluem produtos da categoria 'Frutas' e onde o status do pedido é 'Enviado'. Isso demonstra o desempenho do MongoDB e do PostgreSQL ao filtrar dados através de lookups, unwinds e várias junções.",
    "sql_performance": "O PostgreSQL geralmente é mais rápido para consultas relacionais devido ao seu planejador de consultas otimizado e mecanismo de execução. O MongoDB, sendo um banco de dados NoSQL, se destaca em cenários que envolvem grandes volumes de dados não estruturados e proporciona flexibilidade no design do esquema.",
    "json_note": "(o resultado JSON é o mesmo para ambos os bancos de dados)",
    "sql_query_explanation": "Para o PostgreSQL, a consulta usa junções SQL eficientes e indexação para filtrar e recuperar os dados rapidamente. O planejador de consultas otimizado do PostgreSQL ajuda a determinar a maneira mais eficiente de executar a consulta, garantindo tempos de resposta mais rápidos para dados relacionais.",
    "mongodb_query_explanation": "Para o MongoDB, a consulta envolve o uso do framework de agregação, que inclui estágios como `$lookup` para unir coleções e `$unwind` para desconstruir arrays. A flexibilidade do MongoDB no manuseio de dados não estruturados permite agregações complexas, mas pode resultar em tempos de processamento mais longos em comparação com bancos de dados SQL tradicionais.",
    "example": "Exemplo:"
  },
  "update": {
    "performance": "Comparação de Desempenho: SQL vs NoSQL",
    "update_description": "A operação de atualização muda o status de todos os pedidos de 'Pendente' para 'Atualizado' para os meses de junho e julho, e incrementa a quantidade de itens de pedido relacionados. Isso demonstra o desempenho do MongoDB e do PostgreSQL ao realizar atualizações complexas envolvendo múltiplas coleções/tabelas.",
    "loading": "Carregando...",
    "click_to_update": "Clique para Atualizar",
    "sql": "SQL",
    "nosql": "NoSQL",
    "postgresql": "(PostgreSQL)",
    "mongodb": "(MongoDB)",
    "sql_performance": "O PostgreSQL geralmente é mais rápido para consultas relacionais devido ao seu planejador de consultas otimizado e mecanismo de execução. O MongoDB, sendo um banco de dados NoSQL, se destaca em cenários que envolvem grandes volumes de dados não estruturados e proporciona flexibilidade no design do esquema.",
    "sql_update_explanation": "Para o PostgreSQL, a operação de atualização usa consultas SQL eficientes para modificar o status dos pedidos e incrementar a quantidade de itens de pedido. O planejador de consultas otimizado garante uma execução rápida de atualizações complexas em múltiplas tabelas.",
    "mongodb_update_explanation": "Para o MongoDB, a operação de atualização aproveita o framework de agregação e operações de atualização para mudar o status dos pedidos e incrementar a quantidade de itens de pedido. Enquanto o MongoDB lida com dados não estruturados de forma flexível, pode levar mais tempo para atualizações complexas em comparação com bancos de dados SQL tradicionais.",
    "postgresql_function": "Função de Atualização do PostgreSQL:",
    "mongodb_function": "Função de Atualização do MongoDB:"
  },
  "delete": {
    "performance": "Comparação de Desempenho: SQL vs NoSQL",
    "delete_description": "A operação de exclusão remove pedidos antigos e seus itens relacionados do banco de dados. Isso demonstra o desempenho do MongoDB e do PostgreSQL ao realizar exclusões complexas envolvendo múltiplas coleções/tabelas.",
    "loading": "Carregando...",
    "click_to_delete": "Clique para Excluir",
    "sql": "SQL",
    "nosql": "NoSQL",
    "postgresql": "(PostgreSQL)",
    "mongodb": "(MongoDB)",
    "sql_performance": "O PostgreSQL geralmente é mais rápido para consultas relacionais devido ao seu planejador de consultas otimizado e mecanismo de execução. O MongoDB, sendo um banco de dados NoSQL, se destaca em cenários que envolvem grandes volumes de dados não estruturados e proporciona flexibilidade no design do esquema.",
    "sql_delete_explanation": "Para o PostgreSQL, a operação de exclusão usa consultas SQL eficientes para remover pedidos antigos e seus itens relacionados. O planejador de consultas otimizado garante uma execução rápida de exclusões complexas em múltiplas tabelas.",
    "mongodb_delete_explanation": "Para o MongoDB, a operação de exclusão aproveita o framework de agregação e operações de exclusão para remover pedidos antigos e seus itens relacionados. Enquanto o MongoDB lida com dados não estruturados de forma flexível, pode levar mais tempo para exclusões complexas em comparação com bancos de dados SQL tradicionais.",
    "postgresql_function": "Função de Exclusão do PostgreSQL:",
    "mongodb_function": "Função de Exclusão do MongoDB:"
  },
  "which_one": {
    "title": "Qual devo usar: SQL vs NoSQL",
    "scoreboard": "Placar",
    "recommendation": "Recomendação",
    "test_another_question": "+ Testar outra pergunta",
    "sql": "SQL",
    "nosql": "NoSQL"
  },
  "main_layout": {
    "post": "Envio de dados",
    "get": "Pesquisar informações",
    "update": "Atualizar dados",
    "delete": "Excluir informações",
    "which_one": "Qual devo usar?"
  }
}
